{"version":3,"sources":["components/common/Button.js","services/taskService.js","components/common/Hexagon.js","components/EmptyBoard.js","components/common/Input.js","components/TextField.js","components/pages/Describe.js","components/NumberedBoard.js","components/common/ColorPicker.js","components/pages/Align.js","components/pages/Verify.js","components/Navbar.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Button","_ref","children","onClick","className","react_default","a","createElement","Container","styled","div","_templateObject","BASE_PATH","taskService","getCompletedTask","Axios","get","concat","then","res","data","catch","err","save","task","_id","put","post","savedTask","getEmpty","img","src","inputs","verifications","Hexagon","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleMark","e","console","log","state","isMouseOver","isSelected","setState","hexagonStyle","objectSpread","strokeWidth","fill","currentColor","trackMouseOver","trackMouseLeave","stroke","bind","assertThisInitialized","transform","onMouseEnter","onMouseLeave","id","points","style","text-anchor","x","y","font-size","number","Component","EmptyBoard","_this2","EmptyBoard_Container","viewBox","map","i","j","Fragment","common_Hexagon","EmptyBoard_templateObject","Input_templateObject","_templateObject2","textarea","_templateObject3","TextField","TextField_Container","Instructions","InputContainer","TextField_StyledInput","placeholder","TextField_templateObject","TextField_templateObject2","StyledInput","TextField_templateObject3","_templateObject4","Describe","handleTaskDescription","handleSend","BoardContainer","components_EmptyBoard","TextFieldContainer","Describe_InputContainer","components_TextField","StyledButton","RedirectLink","to","ElementContainer","Describe_templateObject","Describe_templateObject2","Describe_templateObject3","Describe_templateObject4","Link","_templateObject5","_templateObject6","NumberedBoard_Container","NumberedBoard_templateObject","ColorPicker","handleClick","passColorToParent","target","attributes","color","value","ColorPicker_Container","Color","selected","CurrentColor","ColorPicker_templateObject","button","ColorPicker_templateObject2","ColorPicker_templateObject3","steps","Align","taskIndex","stepIndex","setColor","newColor","handleSubmitVerificaion","taskToVerify","StepsContainer","Step","step","StepElement","Separator","ButtonContainer","ActiveButton","showNext","InactiveButton","Align_BoardContainer","common_ColorPicker","NumberedBoard","Align_templateObject","Align_templateObject2","Align_templateObject3","Align_templateObject4","Align_templateObject5","Align_templateObject6","_templateObject7","_templateObject8","hr","_templateObject9","Verify","Verify_StepsContainer","Verify_Step","Verify_StepElement","NextButton","Verify_BoardContainer","Verify_templateObject","Verify_templateObject2","Verify_templateObject3","Verify_templateObject4","Verify_templateObject5","Verify_templateObject6","Verify_templateObject7","Navbar","Navbar_Container","MenuContainer","MenuItem","MenuItemLink","Navbar_templateObject","li","Navbar_templateObject2","Navbar_templateObject3","Navbar_templateObject4","Header_templateObject","Header_templateObject2","Footer_templateObject","Footer_templateObject2","Footer_templateObject3","App","react_router_dom","App_Container","components_Navbar","Content","react_router","exact","path","component","App_templateObject","App_templateObject2","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2d28ccd.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = ({ children, onClick, className }) => (\n  <Container onClick={onClick} className={className}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n\nconst Container = styled.div`\n  align-self: center;\n  width: 90%;\n  height: 40px;\n  background: blue;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  transition: all 300ms;\n  border-radius: 4px;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import Axios from \"axios\";\n\nconst BASE_PATH = \"/api/task\";\n\n// const Axios = Axios.create({\n//     withCredentials: true,\n// })\n\nexport default {\n  getCompletedTask,\n  save,\n  getEmpty\n};\n\nfunction getCompletedTask() {\n  var queryStr = \"\"; //useless for now\n  return Axios.get(`${BASE_PATH}?${queryStr}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n\nfunction save(task) {\n  if (task._id) {\n    //for edit. Useless for now\n    return Axios.put(`${BASE_PATH}/${task._id}`, task)\n      .then(res => res.data)\n      .catch(err => {\n        throw err;\n      });\n  } else {\n    return Axios.post(`${BASE_PATH}`, task)\n      .then(res => {\n        const savedTask = res.data; //includes the _id from DB\n        return savedTask;\n      })\n      .catch(err => {\n        throw err;\n      });\n  }\n}\n\nfunction getEmpty() {\n  const emptyTask = {\n    img: { _id: \"\", src: \"\" },\n    inputs: [],\n    verifications: []\n  };\n  return emptyTask;\n}\n\nfunction getById(taskId) {\n  if (!taskId) return Promise.reject(\"no task is\");\n  return Axios.get(`${BASE_PATH}/${taskId}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n\nfunction remove(taskId) {\n  return Axios.delete(`${BASE_PATH}/${taskId}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n","import React, { Component } from \"react\";\n\nclass Hexagon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hexagonStyle: {\n        fill: \"white\",\n        stroke: \"black\",\n        strokeWidth: \"2\"\n      },\n      isSelected: false,\n      isMouseOver: false\n    };\n    this.toggleMark = this.toggleMark.bind(this);\n  }\n\n  toggleMark = e => {\n    console.log(\"was clicked!\");\n    // deselected -> mark and uncolor it\n    if (this.state.isMouseOver && this.state.isSelected) {\n      this.setState({\n        hexagonStyle: {\n          ...this.state.hexagonStyle,\n          strokeWidth: \"5\",\n          fill: this.props.currentColor\n        },\n        isSelected: false\n      });\n      // selected - > color and mark\n    } else if (this.state.isMouseOver && !this.state.isSelected) {\n      this.setState({\n        hexagonStyle: {\n          ...this.state.hexagonStyle,\n          strokeWidth: \"5\",\n          fill: this.props.currentColor\n        },\n        isSelected: true\n      });\n      // selected but not hovered -> keep marked but decolor\n    } else if (!this.state.isMouseOver && this.state.isSelected) {\n      this.setState({\n        hexagonStyle: {\n          ...this.state.hexagonStyle,\n          strokeWidth: \"5\"\n        },\n        isSelected: false\n      });\n      // not hovered and not selected\n    } else if (!this.state.isMouseOver && !this.state.isSelected) {\n      this.setState({\n        hexagonStyle: { ...this.state.hexagonStyle, strokeWidth: \"2\" },\n        isSelected: true\n      });\n    }\n  };\n\n  trackMouseOver = e => {\n    this.setState({ isMouseOver: true });\n  };\n\n  trackMouseLeave = e => {\n    this.setState({ isMouseOver: false });\n  };\n\n  render() {\n    return (\n      <g\n        transform={this.props.transform}\n        onMouseEnter={this.trackMouseOver}\n        onMouseLeave={this.trackMouseLeave}\n        onClick={this.toggleMark}\n      >\n        <polygon\n          id=\"hexagon\"\n          points=\"50,25 100,25 125,68 100,111 50,111 25,68\"\n          style={this.state.hexagonStyle}\n        />\n        <text text-anchor=\"middle\" x=\"74\" y=\"85\" fill=\"black\" font-size=\"40\">\n          {this.props.number}\n        </text>\n      </g>\n    );\n  }\n}\n\nexport default Hexagon;\n\n// const Number = styled.p`\n//   font-size: 8px;\n// `;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Hexagon from \"./common/Hexagon\";\n\nclass EmptyBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Container>\n        <svg viewBox=\"0 0 1350 950\">\n          {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(i => {\n            return [0, 2, 4, 6, 8, 10, 12, 14].map(j => {\n              return (\n                <>\n                  <Hexagon\n                    number=\"\"\n                    currentColor={this.props.currentColor}\n                    transform={\"translate(\" + j * 75 + \",\" + i * 86 + \")\"}\n                  />\n                  <Hexagon\n                    number=\"\"\n                    currentColor={this.props.currentColor}\n                    transform={\n                      \"translate(\" + (j + 1) * 75 + \",\" + (i * 86 + 43) + \")\"\n                    }\n                  />\n                </>\n              );\n            });\n          })}\n        </svg>\n      </Container>\n    );\n  }\n}\n\nexport default EmptyBoard;\n\nconst Container = styled.div`\n  margin-left: 2em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = ({ label, placeholder, className, onChange }) => {\n  return (\n    <Container className={className}>\n      <Label>{label}</Label>\n      <StyledInput placeholder={placeholder} onChange={onChange} />\n    </Container>\n  );\n};\n\nexport default Input;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.div`\n  font-size: 14px;\n  margin-top: 16px;\n  margin-bottom: 6px;\n`;\n\nconst StyledInput = styled.textarea`\n  align-self: center;\n  width: 90%;\n  height: 120px;\n  border: 3px solid #cccccc;\n  font-family: Tahoma, sans-serif;\n  box-sizing: border-box;\n  padding: 6px;\n  color: #444;\n  font-size: 18px;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"./common/Input\";\n\nclass TextField extends Component {\n  state = {};\n\n  // TODO: functions: handleInputChange, addInput, etc.\n\n  render() {\n    return (\n      <>\n        <Container>\n          <Instructions />\n          <InputContainer>\n            <StyledInput placeholder=\"Start typing here...\">\n              {/* {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((a, i) => (\n                  <textarea placeholder=\"input...\" label={i + 1} />\n              ))} */}\n            </StyledInput>\n          </InputContainer>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TextField;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n\nconst StyledInput = styled.textarea`\n  width: 95%;\n  height: 88%;\n  margin: 4px;\n  background-color: #f5f5f5;\n  background-image: -webkit-linear-gradient(left, white 10px, transparent 10px),\n    -webkit-linear-gradient(right, white 10px, transparent 10px),\n    -webkit-linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-image: -moz-linear-gradient(left, white 10px, transparent 10px),\n    -moz-linear-gradient(right, white 10px, transparent 10px),\n    -moz-linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-image: -ms-linear-gradient(left, white 10px, transparent 10px),\n    -ms-linear-gradient(right, white 10px, transparent 10px),\n    -ms-linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-image: -o-linear-gradient(left, white 10px, transparent 10px),\n    -o-linear-gradient(right, white 10px, transparent 10px),\n    -o-linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-image: linear-gradient(left, white 10px, transparent 10px),\n    linear-gradient(right, white 10px, transparent 10px),\n    linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-size: 100% 100%, 100% 100%, 100% 31px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);\n  line-height: 31px;\n  font-size: 18px;\n  color: #666;\n  padding: 8px;\n  &:focus {\n    outline: none;\n  }\n`;\nconst InputContainer = styled.div`\n  height: 80vh;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../common/Button\";\nimport taskService from \"../../services/taskService\";\nimport { Link } from \"react-router-dom\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport EmptyBoard from \"../EmptyBoard\";\nimport TextField from \"../TextField\";\n\nclass Describe extends Component {\n  state = {};\n\n  componentDidMount() {\n    const task = taskService.getEmpty();\n    this.setState({ task }); //inputs\n  }\n  handleTaskDescription = () => {\n    // get values from 'inputs'\n    // put the values in state, inside the empty 'inputs' array\n    taskService.save({ ...this.state });\n  };\n  handleSend = () => {\n    // Store user text and other required info\n    this.handleTaskDescription();\n    // Move to the \"Align\" task page\n    // document.location.href = \"https://strayblues.github.io/hexagon-app/align\"; // Causes bug on deployment\n  };\n  render() {\n    return (\n      <>\n        <BoardContainer>\n          <h2>Write instructions for painting the tiles</h2>\n          <EmptyBoard currentColor=\"white\" />\n        </BoardContainer>\n        <TextFieldContainer>\n          <InputContainer>\n            <TextField />\n          </InputContainer>\n          <StyledButton onClick={this.handleSend}>\n            <RedirectLink to=\"/align\">Send</RedirectLink>\n          </StyledButton>\n        </TextFieldContainer>\n      </>\n    );\n  }\n}\n\nexport default Describe;\n\nconst ElementContainer = styled.div`\n  margin: 1em 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 75vh;\n  overflow: scroll;\n`;\nconst InputContainer = styled(ElementContainer)`\n  max-height: 75vh;\n  border-radius: 4px;\n  transition: all 300ms;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  }\n`;\nconst BoardContainer = styled(ElementContainer)``;\nconst StyledButton = styled(Button)`\n  width: 25%;\n  align-self: left;\n`;\nconst RedirectLink = styled(Link)`\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  padding: 20px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: inherit;\n  transition: all 300ms;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\nconst TextFieldContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Hexagon from \"./common/Hexagon\";\n\nclass EmptyBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Container>\n        <svg viewBox=\"0 0 1350 950\">\n          {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(i => {\n            return [0, 2, 4, 6, 8, 10, 12, 14].map(j => {\n              return (\n                <>\n                  <Hexagon\n                    number={10 * j + i + 1}\n                    currentColor={this.props.currentColor}\n                    transform={\"translate(\" + j * 75 + \",\" + i * 86 + \")\"}\n                  />\n                  <Hexagon\n                    number={10 * j + i + 11}\n                    currentColor={this.props.currentColor}\n                    transform={\n                      \"translate(\" + (j + 1) * 75 + \",\" + (i * 86 + 43) + \")\"\n                    }\n                  />\n                </>\n              );\n            });\n          })}\n        </svg>\n      </Container>\n    );\n  }\n}\n\nexport default EmptyBoard;\n\nconst Container = styled.div`\n  margin-left: 2em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleClick = e => {\n    this.props.passColorToParent(e.target.attributes.color.value);\n  };\n\n  render() {\n    return (\n      <Container>\n        {[\n          \"gold\",\n          \"limegreen\",\n          \"crimson\",\n          \"black\",\n          \"dodgerblue\",\n          \"violet\",\n          \"orange\",\n          \"white\"\n        ].map(color => (\n          <Color\n            color={color}\n            selected={color === this.props.currentColor}\n            onClick={this.handleClick}\n          />\n        ))}\n        <CurrentColor color={this.props.currentColor} />\n      </Container>\n    );\n  }\n}\n\nexport default ColorPicker;\n\nconst Container = styled.div`\n  align-self: center;\n  height: 60px;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  transition: all 300ms;\n  border-radius: 4px;\n  cursor: pointer;\n`;\nconst Color = styled.button`\n  background: ${props => props.color};\n  width: 3em;\n  height: 3em;\n  margin: 0 0.5em;\n  border-radius: 50%;\n  border: 1px solid black;\n  outline: none;\n  box-shadow: ${props =>\n    props.selected ? \"0 5px 10px rgba(0, 0, 0, 0.8)\" : \"\"};\n  transition: all 300ms;\n  &:hover {\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.8);\n  }\n`;\nconst CurrentColor = styled(Color)`\n  width: 1.5em;\n  height: 1.5em;\n  margin-left: 2em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport taskService from \"../../services/taskService\";\n\n// Components\nimport NumberedBoard from \"../NumberedBoard\";\nimport ColorPicker from \"../common/ColorPicker\";\nimport Button from \"../common/Button\";\n\nconst mockData = {\n  tasks: [\n    {\n      image: {\n        _id: \"1\",\n        src: \"cat1.jpg\"\n      },\n      description: [\"Line 1\", \"Line 2\", \"Line 3\", \"Line 4\"],\n      verifications: []\n    },\n    {\n      image: {\n        _id: \"2\",\n        src: \"cat2.jpg\"\n      },\n      description: [\"Line 1\", \"Line 2\", \"Line 3\", \"Line 4\"],\n      verifications: []\n    }\n  ]\n};\n\nconst steps = mockData.tasks[0].description;\n// const currentStep = steps[i];\n\nclass Align extends Component {\n  state = {\n    taskIndex: 0,\n    stepIndex: 0,\n    currentColor: \"white\"\n  };\n\n  // advancSteps(steps) {\n  //   this.setState(...currentStep);\n  // }\n\n  setColor = newColor => {\n    this.setState({ currentColor: newColor });\n  };\n  componentDidMount() {\n    const taskToVerify = taskService.getCompletedTask();\n    this.setState({ taskToVerify }); // \"verify\" page\n  }\n  handleSubmitVerificaion = () => {\n    // completedTaskWithVerification.verification.push(new verification)\n    // taskService.save({ completedTaskWithVerification });\n  };\n  showNext() {}\n  render() {\n    return (\n      <>\n        <StepsContainer>\n          <h1>Align The Tiles</h1>\n          <Step>\n            {/* {[1, 2, 3].map(i => (\n              <StepElement>{i}</StepElement>\n            ))} */}\n            {[steps].map((step, i) => (\n              <StepElement>{step[i]}</StepElement>\n            ))}\n            <Separator></Separator>\n            <p>Finished?</p>\n            <p>Click NEXT to get more instructions:</p>\n            <ButtonContainer>\n              <ActiveButton onClick={this.showNext}>Next</ActiveButton>\n              <InactiveButton>Done</InactiveButton>\n            </ButtonContainer>\n          </Step>\n        </StepsContainer>\n        <BoardContainer>\n          <ColorPicker\n            passColorToParent={this.setColor}\n            currentColor={this.state.currentColor}\n          />\n          <NumberedBoard\n            currentColor={this.state.currentColor} // Pass color to Board\n          />\n        </BoardContainer>\n      </>\n    );\n  }\n}\n\nexport default Align;\n\nconst ElementContainer = styled.div`\n  margin: 2em;\n  background-color: white;\n`;\nconst StepElement = styled(ElementContainer)`\n  background-color: lightblue;\n  padding: 0.5em;\n  border-radius: 4px;\n`;\nconst Step = styled.div``;\n\nconst BoardContainer = styled(ElementContainer)`\n  width: 50vw;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n`;\nconst StepsContainer = styled(ElementContainer)`\n  width: 32vw;\n`;\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\nconst ActiveButton = styled(Button)`\n  background-color: blue;\n  width: 20%;\n`;\nconst InactiveButton = styled(Button)`\n  background-color: #aaa;\n  width: 20%;\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  }\n`;\nconst Separator = styled.hr`\n  margin: 0 1em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport taskService from \"../../services/taskService\";\n\n// Mock data\nimport { jsonResponse } from \"../../data/tasks.js\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport NumberedBoard from \"../NumberedBoard\";\nimport ColorPicker from \"../common/ColorPicker\";\nimport Button from \"../common/Button\";\n\nclass Verify extends Component {\n  state = {\n    currentColor: \"white\"\n  };\n\n  componentDidMount() {\n    const taskToVerify = taskService.getCompletedTask();\n    this.setState({ taskToVerify }); // \"verify\" page\n  }\n  handleSubmitVerificaion = () => {\n    // completedTaskWithVerification.verification.push(new verification)\n    // taskService.save({ completedTaskWithVerification });\n  };\n  render() {\n    return (\n      <>\n        <StepsContainer>\n          <h1>Verification Task</h1>\n          <Step>\n            <StepElement>\n              Show next line when user clicks next. In the end the \"Next\" button\n              is replaced with \"Done\". Location of Next/Done buttons may\n              change.\"\n            </StepElement>\n            <NextButton>Next</NextButton>\n          </Step>\n        </StepsContainer>\n        <BoardContainer>\n          <ColorPicker />\n          <NumberedBoard />\n          {/* <DoneButton>Done</DoneButton> */}\n        </BoardContainer>\n      </>\n    );\n  }\n}\n\nexport default Verify;\n\nconst ElementContainer = styled.div`\n  margin: 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 75vh;\n`;\nconst Step = styled.div`\n  display: flex;\n`;\nconst StepsContainer = styled(ElementContainer)``;\nconst StepElement = styled(ElementContainer)`\n  background-color: lightblue;\n  padding: 0.5em;\n  border-radius: 4px;\n`;\nconst BoardContainer = styled(ElementContainer)`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n`;\nconst DoneButton = styled(Button)`\n  width: 25%;\n  align-self: flex-end;\n  background-color: lightseagreen;\n`;\nconst NextButton = styled(Button)`\n  background-color: blue;\n  width: 30%;\n  margin-right: 3em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <Container>\n        <MenuContainer>\n          {/* <MenuItem>\n            <MenuItemLink to=\"/instructions\">Instructions</MenuItemLink>\n          </MenuItem> */}\n          <MenuItem>\n            <MenuItemLink to=\"/describe\">Describe</MenuItemLink>\n          </MenuItem>\n          <MenuItem>\n            <MenuItemLink to=\"/align\">Align</MenuItemLink>\n          </MenuItem>\n          {/* <MenuItem>\n            <MenuItemLink to=\"/verify\">Verify</MenuItemLink>\n          </MenuItem> */}\n        </MenuContainer>\n      </Container>\n    );\n  }\n}\n\nexport default Navbar;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n`;\nconst MenuContainer = styled.li`\n  display: flex;\n  color: #222;\n  list-style: none;\n`;\nconst MenuItemLink = styled(Link)`\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  padding: 20px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: inherit;\n  transition: all 300ms;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);\n  }\n`;\nconst MenuItem = styled.li`\n  padding: 1em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Header = () => {\n  return (\n    <Container>\n      <Title>Hexagon App</Title>\n    </Container>\n  );\n};\n\nexport default Header;\n\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100px;\n  border-bottom: 1px solid #000;\n  background: #fafafa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 24px;\n`;\n\nconst Title = styled.div`\n  font-size: 36px;\n  color: #444;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Footer = () => {\n  return (\n    <Container>\n      <Divider />\n      <Info>© ONLP Lab 2019</Info>\n    </Container>\n  );\n};\n\nexport default Footer;\n\nconst Container = styled.div`\n  width: 500px;\n  margin: 1em auto;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Divider = styled.div`\n  width: 500px;\n  height: 1px;\n  background: #444;\n  margin: 20px 0;\n`;\n\nconst Info = styled.div`\n  color: #444;\n  font-size: 18px;\n  align-self: flex-end;\n`;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\n// components\nimport Describe from \"./components/pages/Describe\";\nimport Align from \"./components/pages/Align\";\nimport Verify from \"./components/pages/Verify\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Container>\n          <Navbar />\n          {/* <Header /> */}\n          <Content>\n            <Switch>\n              <Route exact path=\"/\" component={Describe} />\n              <Route path=\"/describe\" exact component={Describe} />\n              <Route path=\"/align\" exact component={Align} />\n              <Route path=\"/verify\" exact component={Verify} />\n            </Switch>\n          </Content>\n          {/* <Footer /> */}\n        </Container>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  background: #e0e0e0;\n  display: flex;\n  flex-direction: column;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-self: center;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}