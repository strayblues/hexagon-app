{"version":3,"sources":["components/common/Button.js","components/common/Hexagon.js","components/HexagonEmptyBoard.js","components/EmptyBoard.js","components/TextField.js","components/pages/Describe.js","components/common/ColorPicker.js","components/pages/Align.js","App.js","serviceWorker.js","index.js"],"names":["Button","_ref","children","onClick","className","react_default","a","createElement","Container","styled","div","_templateObject","Hexagon","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleMark","e","console","log","state","isMouseOver","isSelected","setState","hexagonStyle","objectSpread","strokeWidth","fill","trackMouseOver","trackMouseLeave","stroke","bind","assertThisInitialized","id","points","style","transform","onMouseEnter","onMouseLeave","Component","HexagonEmptyBoard","HexagonEmptyBoard_Container","viewBox","map","i","j","Fragment","common_Hexagon","HexagonEmptyBoard_templateObject","EmptyBoard","EmptyBoard_Container","Instructions","components_HexagonEmptyBoard","EmptyBoard_templateObject","_templateObject2","TextField","TextField_Container","TextField_Instructions","InputContainer","StyledInput","placeholder","TextField_templateObject","TextField_templateObject2","textarea","_templateObject3","_templateObject4","Home","handleSend","handleTaskDescription","document","location","href","BoardContainer","components_EmptyBoard","TextFieldContainer","Describe_InputContainer","components_TextField","StyledButton","ElementContainer","Describe_templateObject","Describe_templateObject2","Describe_templateObject3","Describe_templateObject4","_templateObject5","ColorPicker","handleClick","currentColor","target","attributes","color","value","_this2","ColorPicker_Container","Color","selected","CurrentColor","ColorPicker_templateObject","button","ColorPicker_templateObject2","ColorPicker_templateObject3","steps","Align","taskIndex","stepIndex","handleSubmitVerificaion","apply","toConsumableArray","StepsContainer","Step","step","StepElement","Separator","ButtonContainer","ActiveButton","showNext","InactiveButton","Align_BoardContainer","common_ColorPicker","setColor","Align_templateObject","Align_templateObject2","Align_templateObject3","Align_templateObject4","Align_templateObject5","_templateObject6","_templateObject7","_templateObject8","hr","_templateObject9","App","react_router_dom","App_Container","Content","react_router","exact","path","component","Describe","App_templateObject","App_templateObject2","Boolean","window","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b710f287.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = ({ children, onClick, className }) => (\n  <Container onClick={onClick} className={className}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n\nconst Container = styled.div`\n  align-self: center;\n  width: 90%;\n  height: 40px;\n  background: blue;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  transition: all 300ms;\n  border-radius: 4px;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import React, { Component } from \"react\";\n\nclass Hexagon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hexagonStyle: {\n        fill: \"none\",\n        stroke: \"black\",\n        strokeWidth: \"2\"\n      },\n      isSelected: false,\n      isMouseOver: false\n    };\n    this.toggleMark = this.toggleMark.bind(this);\n  }\n\n  toggleMark = e => {\n    console.log(\"was clicked!\");\n    // deselected -> mark and uncolor it\n    if (this.state.isMouseOver && this.state.isSelected) {\n      this.setState({\n        hexagonStyle: {\n          ...this.state.hexagonStyle,\n          strokeWidth: \"5\",\n          fill: \"white\"\n        },\n        isSelected: false\n      });\n      // selected - > color and mark\n    } else if (this.state.isMouseOver && !this.state.isSelected) {\n      this.setState({\n        hexagonStyle: {\n          ...this.state.hexagonStyle,\n          strokeWidth: \"4\",\n          fill: \"pink\"\n        },\n        isSelected: true\n      });\n      // If hexagon selected but not hovered, keep marked but decolor\n    } else if (!this.state.isMouseOver && this.state.isSelected) {\n      this.setState({\n        hexagonStyle: {\n          ...this.state.hexagonStyle,\n          strokeWidth: \"5\"\n        },\n        isSelected: false\n      });\n      // If not hovered and not selected\n    } else if (!this.state.isMouseOver && !this.state.isSelected) {\n      this.setState({\n        hexagonStyle: { ...this.state.hexagonStyle, strokeWidth: \"2\" },\n        isSelected: true\n      });\n    }\n  };\n\n  trackMouseOver = e => {\n    this.setState({ isMouseOver: true });\n  };\n\n  trackMouseLeave = e => {\n    this.setState({ isMouseOver: false });\n  };\n\n  render() {\n    return (\n      <polygon\n        id=\"hexagon\"\n        points=\"50,25 100,25 125,68 100,111 50,111 25,68\"\n        style={this.state.hexagonStyle}\n        transform={this.props.transform}\n        onClick={this.toggleMark}\n        onMouseEnter={this.trackMouseOver}\n        onMouseLeave={this.trackMouseLeave}\n      />\n    );\n  }\n}\n\nexport default Hexagon;\n\n// const Number = styled.p`\n//   font-size: 8px;\n// `;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Hexagon from \"../components/common/Hexagon\";\n\nclass HexagonEmptyBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  // The hexagon methods currently effect the entite board.\n  // They should only effect individual hexagons.\n\n  render() {\n    return (\n      <Container>\n        <svg viewBox=\"0 0 1350 770\">\n          {[0, 1, 2, 3, 4, 5, 6, 7].map(i => {\n            return [0, 2, 4, 6, 8, 10, 12, 14].map(j => {\n              return (\n                <>\n                  <Hexagon\n                    transform={\"translate(\" + j * 75 + \",\" + i * 86 + \")\"}\n                  />\n                  <Hexagon\n                    transform={\n                      \"translate(\" + (j + 1) * 75 + \",\" + (i * 86 + 43) + \")\"\n                    }\n                  />\n                </>\n              );\n            });\n          })}\n        </svg>\n      </Container>\n    );\n  }\n}\n\nexport default HexagonEmptyBoard;\n\nconst Container = styled.div`\n  margin-left: 2em;\n  min-width: 0;\n  min-height: 0;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// Components\nimport HexagonEmptyBoard from \"./HexagonEmptyBoard\";\n\nconst EmptyBoard = props => {\n  return (\n    <Container>\n      <Instructions />\n      <HexagonEmptyBoard />\n    </Container>\n  );\n};\n\nexport default EmptyBoard;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n// import Input from \"./common/Input\";\n\nclass TextField extends Component {\n  state = {};\n\n  // TODO: functions: handleInputChange, addInput, etc.\n\n  render() {\n    return (\n      <>\n        <Container>\n          <Instructions />\n          <InputContainer>\n            <StyledInput placeholder=\"Start typing here...\">\n              {/* {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((a, i) => (\n                  <textarea placeholder=\"input...\" label={i + 1} />\n              ))} */}\n            </StyledInput>\n          </InputContainer>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TextField;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n\nconst StyledInput = styled.textarea`\n  width: 95%;\n  height: 88%;\n  margin: 4px;\n  background-color: #f5f5f5;\n  background-image: -webkit-linear-gradient(left, white 10px, transparent 10px),\n    -webkit-linear-gradient(right, white 10px, transparent 10px),\n    -webkit-linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-image: -moz-linear-gradient(left, white 10px, transparent 10px),\n    -moz-linear-gradient(right, white 10px, transparent 10px),\n    -moz-linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-image: -ms-linear-gradient(left, white 10px, transparent 10px),\n    -ms-linear-gradient(right, white 10px, transparent 10px),\n    -ms-linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-image: -o-linear-gradient(left, white 10px, transparent 10px),\n    -o-linear-gradient(right, white 10px, transparent 10px),\n    -o-linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-image: linear-gradient(left, white 10px, transparent 10px),\n    linear-gradient(right, white 10px, transparent 10px),\n    linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-size: 100% 100%, 100% 100%, 100% 31px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);\n  line-height: 31px;\n  font-size: 18px;\n  color: #666;\n  padding: 8px;\n  &:focus {\n    outline: none;\n  }\n`;\nconst InputContainer = styled.div`\n  height: 80vh;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../common/Button\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport EmptyBoard from \"../EmptyBoard\";\nimport TextField from \"../TextField\";\n\nclass Home extends Component {\n  state = {};\n\n  // componentDidMount() {\n  //   const task = taskService.getEmpty();\n  //   this.setState({ task }); //inputs\n\n  // handleTaskDescription = () => {\n  //   // get values from 'inputs'\n  //   // put the values in state, inside the empty 'inputs' array\n  //   taskService.save({ ...this.state });\n  // };\n  handleSend = () => {\n    // Store user text and other required info\n    this.handleTaskDescription();\n    // Move to the \"Align\" task page\n    document.location.href = \"align\";\n  };\n  render() {\n    return (\n      <>\n        <BoardContainer>\n          <h1>Task</h1>\n          <EmptyBoard />\n        </BoardContainer>\n        <TextFieldContainer>\n          <InputContainer>\n            <TextField />\n          </InputContainer>\n          <StyledButton onClick={this.handleSend}>Send</StyledButton>\n        </TextFieldContainer>\n      </>\n    );\n  }\n}\n\nexport default Home;\nconst ElementContainer = styled.div`\n  margin: 1em 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 75vh;\n  overflow: scroll;\n`;\nconst InputContainer = styled(ElementContainer)`\n  max-height: 75vh;\n  border-radius: 4px;\n  transition: all 300ms;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  }\n`;\nconst BoardContainer = styled(ElementContainer)``;\nconst StyledButton = styled(Button)`\n  width: 25%;\n  align-self: left;\n  /* background-color: lightseagreen; */\n`;\nconst TextFieldContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleClick = e => {\n    this.setState({\n      currentColor: e.target.attributes.color.value\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        {[\n          \"gold\",\n          \"limegreen\",\n          \"crimson\",\n          \"black\",\n          \"dodgerblue\",\n          \"violet\",\n          \"orange\",\n          \"white\"\n        ].map(color => (\n          <Color\n            color={color}\n            selected={color === this.state.currentColor}\n            onClick={this.handleClick}\n          />\n        ))}\n        <CurrentColor color={this.state.currentColor} />\n      </Container>\n    );\n  }\n}\n\nexport default ColorPicker;\n\nconst Container = styled.div`\n  align-self: center;\n  height: 60px;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  transition: all 300ms;\n  border-radius: 4px;\n  cursor: pointer;\n`;\nconst Color = styled.button`\n  background: ${props => props.color};\n  width: 3em;\n  height: 3em;\n  margin: 0 0.5em;\n  border-radius: 50%;\n  border: 1px solid black;\n  outline: none;\n  box-shadow: ${props =>\n    props.selected ? \"0 5px 10px rgba(0, 0, 0, 0.8)\" : \"\"};\n  transition: all 300ms;\n\n  &:hover {\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.8);\n  }\n`;\nconst CurrentColor = styled(Color)`\n  width: 1.5em;\n  height: 1.5em;\n  margin-left: 2em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n// import tasks from \"../../data/tasks\";\n\n// Mock data\n// import jsonResponse from \"../../data/tasks\";\n\n// Components\nimport EmptyBoard from \"../EmptyBoard\";\nimport ColorPicker from \"../common/ColorPicker\";\nimport Button from \"../common/Button\";\n\n// fetch(\"../../data/tasks.json\")\n//   .then(res => res.json())\n//   .then(data => {\n//     console.log(\"data:\", data);\n//     console.log(\"data:\", data);\n//   });\n\nconst mockData = {\n  tasks: [\n    {\n      image: {\n        _id: \"1\",\n        src: \"cat1.jpg\"\n      },\n      inputs: [\"Line 1\", \"Line 2\", \"Line 3\", \"Line 4\"],\n      verifications: []\n    },\n    {\n      image: {\n        _id: \"2\",\n        src: \"cat2.jpg\"\n      },\n      inputs: [\"Line 1\", \"Line 2\", \"Line 3\", \"Line 4\"],\n      verifications: []\n    }\n  ]\n};\n\nconst steps = mockData.tasks[0].inputs; // array\n// const currentStep = steps[0];\n\nclass Align extends Component {\n  state = {\n    taskIndex: 0,\n    stepIndex: 0\n  };\n  // advancSteps(steps) {\n  //   this.setState(...currentStep);\n  // }\n  setColor(currentColor) {\n    this.setState(...currentColor);\n  }\n  // componentDidMount() {\n  //   const taskToVerify = taskService.getCompletedTask();\n  //   this.setState({ taskToVerify }); // \"verify\" page\n  // }\n  handleSubmitVerificaion = () => {\n    // completedTaskWithVerification.verification.push(new verification)\n    // taskService.save({ completedTaskWithVerification });\n  };\n  showNext() {}\n  render() {\n    return (\n      <>\n        <StepsContainer>\n          <h1>Align The Tiles</h1>\n          <Step>\n            {/* {[1, 2, 3].map(i => (\n              <StepElement>{i}</StepElement>\n            ))} */}\n            {[steps].map((step, i) => (\n              <StepElement>{step[i]}</StepElement>\n            ))}\n            <Separator></Separator>\n            <p>Finished?</p>\n            <p>Click NEXT to get more instructions:</p>\n            <ButtonContainer>\n              <ActiveButton onClick={this.showNext}>Next</ActiveButton>\n              <InactiveButton>Done</InactiveButton>\n            </ButtonContainer>\n          </Step>\n        </StepsContainer>\n        <BoardContainer>\n          <ColorPicker\n            currentColor={this.props.currentColor}\n            setColor={this.setColor}\n          />\n          <EmptyBoard currentColor={this.state.currentColor} />\n        </BoardContainer>\n      </>\n    );\n  }\n}\n\nexport default Align;\n\nconst ElementContainer = styled.div`\n  margin: 2em;\n  background-color: white;\n`;\nconst StepElement = styled(ElementContainer)`\n  background-color: lightblue;\n  padding: 0.5em;\n  border-radius: 4px;\n`;\nconst Step = styled.div``;\n\nconst BoardContainer = styled(ElementContainer)`\n  width: 50vw;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n`;\nconst StepsContainer = styled(ElementContainer)`\n  width: 32vw;\n`;\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\nconst ActiveButton = styled(Button)`\n  background-color: blue;\n  width: 20%;\n`;\nconst InactiveButton = styled(Button)`\n  background-color: #aaa;\n  width: 20%;\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  }\n`;\nconst Separator = styled.hr`\n  margin: 0 1em;\n`;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\n// components\nimport Describe from \"./components/pages/Describe\";\nimport Align from \"./components/pages/Align\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Container>\n          {/* <Navbar />\n          <Header /> */}\n          <Content>\n            <Switch>\n              <Route exact path=\"/\" component={Describe} />\n              {/* <Route path=\"/describe\" exact component={Describe} /> */}\n              <Route path=\"/align\" exact component={Align} />\n\n              {/* Verify will be a separate app that gets its output\n              from previous user inputs */}\n              {/* <Route path=\"/verify\" exact component={Verify} /> */}\n            </Switch>\n          </Content>\n          {/* <Footer /> */}\n        </Container>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  background: #e0e0e0;\n  display: flex;\n  flex-direction: column;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-self: center;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}