{"version":3,"sources":["data/board1.png","components/common/Button.js","services/taskService.js","components/common/Input.js","components/TextField.js","components/pages/Describe.js","components/common/Hexagon.js","components/NumberedBoard.js","components/common/ColorPicker.js","components/pages/Align.js","components/pages/AlignDone.js","components/pages/Verify.js","components/Navbar.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","_ref","children","onClick","className","react_default","a","createElement","Container","styled","div","_templateObject","BASE_PATH","taskService","getCompletedTask","Axios","get","concat","then","res","data","catch","err","save","task","_id","put","post","savedTask","getEmpty","img","src","inputs","verifications","Input_templateObject","_templateObject2","textarea","_templateObject3","TextField","state","Fragment","TextField_Container","Instructions","InputContainer","TextField_StyledInput","placeholder","Component","TextField_templateObject","TextField_templateObject2","StyledInput","TextField_templateObject3","_templateObject4","Describe","handleTaskDescription","Object","objectSpread","_this","handleSend","this","setState","BoardContainer","TaskImage","board1","alt","TextFieldContainer","Describe_InputContainer","components_TextField","StyledButton","RedirectLink","to","ElementContainer","Describe_templateObject","Describe_templateObject2","Describe_templateObject3","Describe_templateObject4","_templateObject5","Link","_templateObject6","_templateObject7","Hexagon","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleMark","e","isMouseOver","isSelected","hexagonStyle","strokeWidth","fill","currentColor","trackMouseOver","trackMouseLeave","stroke","bind","assertThisInitialized","transform","onMouseEnter","onMouseLeave","id","points","style","text-anchor","x","y","font-size","number","EmptyBoard","_this2","NumberedBoard_Container","viewBox","map","i","j","common_Hexagon","NumberedBoard_templateObject","ColorPicker","handleClick","passColorToParent","target","attributes","color","value","ColorPicker_Container","Color","selected","CurrentColor","ColorPicker_templateObject","button","ColorPicker_templateObject2","ColorPicker_templateObject3","Align","currentStep","taskIdx","taskDisplayCompleted","tasks","image","description","setColor","newColor","handleSubmitVerificaion","showNextLine","length","taskToVerify","StepsContainer","Step","StepElement","Separator","ButtonContainer","NextButton","DoneButton","handleDone","Align_RedirectLink","Align_BoardContainer","common_ColorPicker","NumberedBoard","Align_templateObject","Align_templateObject2","Align_templateObject3","Align_templateObject4","Align_templateObject5","Align_templateObject6","Align_templateObject7","_templateObject8","_templateObject9","hr","_templateObject10","AlignDone","handleClose","window","open","close","Containter","AlignDone_Instructions","DataToCopy","CloseButton","AlignDone_templateObject","AlignDone_templateObject2","AlignDone_templateObject3","AlignDone_templateObject4","Verify","Verify_StepsContainer","Verify_Step","Verify_StepElement","Verify_NextButton","Verify_BoardContainer","Verify_templateObject","Verify_templateObject2","Verify_templateObject3","Verify_templateObject4","Verify_templateObject5","Verify_templateObject6","Verify_templateObject7","Navbar","Navbar_Container","MenuContainer","MenuItem","MenuItemLink","Navbar_templateObject","li","Navbar_templateObject2","Navbar_templateObject3","Navbar_templateObject4","Header_templateObject","Header_templateObject2","Footer_templateObject","Footer_templateObject2","Footer_templateObject3","App","react_router_dom","App_Container","components_Navbar","Content","react_router","exact","path","component","App_templateObject","App_templateObject2","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mtBCGxC,IAMeC,EANA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,QAASC,EAAtBH,EAAsBG,UAAtB,OACbC,EAAAC,EAAAC,cAACC,EAAD,CAAWL,QAASA,EAASC,UAAWA,GACrCF,IAMCM,EAAYC,IAAOC,IAAVC,sBCTTC,EAAY,YAMHC,EAAA,CACbC,iBAKF,WAEE,OAAOC,IAAMC,IAAN,GAAAC,OAAaL,EAAb,KAAAK,OADQ,KAEZC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBC,MAAM,SAAAC,GACL,MAAMA,KATVC,KAaF,SAAcC,GACZ,OAAIA,EAAKC,IAEAV,IAAMW,IAAN,GAAAT,OAAaL,EAAb,KAAAK,OAA0BO,EAAKC,KAAOD,GAC1CN,KAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBC,MAAM,SAAAC,GACL,MAAMA,IAGHP,IAAMY,KAAN,GAAAV,OAAcL,GAAaY,GAC/BN,KAAK,SAAAC,GACJ,IAAMS,EAAYT,EAAIC,KACtB,OAAOQ,IAERP,MAAM,SAAAC,GACL,MAAMA,KA3BZO,SAgCF,WAME,MALkB,CAChBC,IAAK,CAAEL,IAAK,GAAIM,IAAK,IACrBC,OAAQ,GACRC,cAAe,uiBCjCDxB,IAAOC,IAAVwB,KAKDzB,IAAOC,IAAVyB,KAMS1B,IAAO2B,SAAVC,mrDCEFC,6MAtBbC,MAAQ,2EAKN,OACElC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkC,SAAA,KACEnC,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAD,MACArC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,CAAaC,YAAY,mCAXbC,aAyBlBtC,EAAYC,IAAOC,IAAVqC,KACTL,EAAejC,IAAOC,IAAVsC,KAEZC,EAAcxC,IAAO2B,SAAVc,KAgCXP,EAAiBlC,IAAOC,IAAVyC,8nCClBLC,6MA/BbC,sBAAwB,WAGtBxC,EAAYU,KAAZ+B,OAAAC,EAAA,EAAAD,CAAA,GAAsBE,EAAKjB,WAE7BkB,WAAa,WAEXD,EAAKH,4GAVL,IAAM7B,EAAOX,EAAYgB,WACzB6B,KAAKC,SAAS,CAAEnC,0CAchB,OACEnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkC,SAAA,KACEnC,EAAAC,EAAAC,cAACqD,EAAD,KACEvD,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAACsD,EAAD,CAAW9B,IAAK+B,IAAQC,IAAK,UAE/B1D,EAAAC,EAAAC,cAACyD,EAAD,KACE3D,EAAAC,EAAAC,cAAC0D,EAAD,KACE5D,EAAAC,EAAAC,cAAC2D,EAAD,OAEF7D,EAAAC,EAAAC,cAAC4D,EAAD,CAAchE,QAASuD,KAAKD,YAC1BpD,EAAAC,EAAAC,cAAC6D,EAAD,CAAcC,GAAG,UAAjB,kBA5BWvB,aAsCjBwB,EAAmB7D,IAAOC,IAAV6D,KAOhB5B,EAAiBlC,YAAO6D,EAAP7D,CAAH+D,KAWdZ,EAAiBnD,YAAO6D,EAAP7D,CAAHgE,KACdZ,EAAYpD,IAAOqB,IAAV4C,KACTP,EAAe1D,YAAOT,EAAPS,CAAHkE,KAIZP,EAAe3D,YAAOmE,IAAPnE,CAAHoE,KAgBZb,EAAqBvD,IAAOC,IAAVoE,aCFTC,eAnFb,SAAAA,EAAYC,GAAO,IAAAxB,EAAA,OAAAF,OAAA2B,EAAA,EAAA3B,CAAAI,KAAAqB,IACjBvB,EAAAF,OAAA4B,EAAA,EAAA5B,CAAAI,KAAAJ,OAAA6B,EAAA,EAAA7B,CAAAyB,GAAAK,KAAA1B,KAAMsB,KAcRK,WAAa,SAAAC,GAEP9B,EAAKjB,MAAMgD,aAAe/B,EAAKjB,MAAMiD,WACvChC,EAAKG,SAAS,CACZ8B,aAAanC,OAAAC,EAAA,EAAAD,CAAA,GACRE,EAAKjB,MAAMkD,aADJ,CAEVC,YAAa,IACbC,KAAMnC,EAAKwB,MAAMY,eAEnBJ,YAAY,IAGLhC,EAAKjB,MAAMgD,cAAgB/B,EAAKjB,MAAMiD,WAC/ChC,EAAKG,SAAS,CACZ8B,aAAanC,OAAAC,EAAA,EAAAD,CAAA,GACRE,EAAKjB,MAAMkD,aADJ,CAEVC,YAAa,IACbC,KAAMnC,EAAKwB,MAAMY,eAEnBJ,YAAY,KAGJhC,EAAKjB,MAAMgD,aAAe/B,EAAKjB,MAAMiD,WAC/ChC,EAAKG,SAAS,CACZ8B,aAAanC,OAAAC,EAAA,EAAAD,CAAA,GACRE,EAAKjB,MAAMkD,aADJ,CAEVC,YAAa,MAEfF,YAAY,IAGJhC,EAAKjB,MAAMgD,aAAgB/B,EAAKjB,MAAMiD,YAChDhC,EAAKG,SAAS,CACZ8B,aAAanC,OAAAC,EAAA,EAAAD,CAAA,GAAME,EAAKjB,MAAMkD,aAAlB,CAAgCC,YAAa,MACzDF,YAAY,KAjDChC,EAsDnBqC,eAAiB,SAAAP,GACf9B,EAAKG,SAAS,CAAE4B,aAAa,KAvDZ/B,EA0DnBsC,gBAAkB,SAAAR,GAChB9B,EAAKG,SAAS,CAAE4B,aAAa,KAzD7B/B,EAAKjB,MAAQ,CACXkD,aAAc,CACZE,KAAM,QACNI,OAAQ,QACRL,YAAa,KAGfF,YAAY,EACZD,aAAa,GAEf/B,EAAK6B,WAAa7B,EAAK6B,WAAWW,KAAhB1C,OAAA2C,EAAA,EAAA3C,CAAAE,IAZDA,wEA+DjB,OACEnD,EAAAC,EAAAC,cAAA,KACE2F,UAAWxC,KAAKsB,MAAMkB,UACtBC,aAAczC,KAAKmC,eACnBO,aAAc1C,KAAKoC,gBACnB3F,QAASuD,KAAK2B,YAEdhF,EAAAC,EAAAC,cAAA,WACE8F,GAAG,UACHC,OAAO,2CACPC,MAAO7C,KAAKnB,MAAMkD,eAEpBpF,EAAAC,EAAAC,cAAA,QAAMiG,cAAY,SAASC,EAAE,KAAKC,EAAE,KAAKf,KAAK,QAAQgB,YAAU,MAC7DjD,KAAKsB,MAAM4B,gBA7EA9D,+GCsCP+D,eAnCb,SAAAA,EAAY7B,GAAO,IAAAxB,EAAA,OAAAF,OAAA2B,EAAA,EAAA3B,CAAAI,KAAAmD,IACjBrD,EAAAF,OAAA4B,EAAA,EAAA5B,CAAAI,KAAAJ,OAAA6B,EAAA,EAAA7B,CAAAuD,GAAAzB,KAAA1B,KAAMsB,KACDzC,MAAQ,GAFIiB,wEAKV,IAAAsD,EAAApD,KACP,OACErD,EAAAC,EAAAC,cAACwG,GAAD,KACE1G,EAAAC,EAAAC,cAAA,OAAKyG,QAAQ,gBACV,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,IAAI,SAAAC,GAClC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAID,IAAI,SAAAE,GACrC,OACE9G,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkC,SAAA,KACEnC,EAAAC,EAAAC,cAAC6G,GAAD,CACER,OAAQ,GAAKO,EAAID,EAAI,EACrBtB,aAAckB,EAAK9B,MAAMY,aACzBM,UAAW,aAAmB,GAAJiB,EAAS,IAAU,GAAJD,EAAS,MAEpD7G,EAAAC,EAAAC,cAAC6G,GAAD,CACER,OAAQ,GAAKO,EAAID,EAAI,GACrBtB,aAAckB,EAAK9B,MAAMY,aACzBM,UACE,aAAyB,IAATiB,EAAI,GAAU,KAAW,GAAJD,EAAS,IAAM,oBAvBjDpE,aAsCnBtC,GAAYC,IAAOC,IAAV2G,0vBCJAC,eAlCb,SAAAA,EAAYtC,GAAO,IAAAxB,EAAA,OAAAF,OAAA2B,EAAA,EAAA3B,CAAAI,KAAA4D,IACjB9D,EAAAF,OAAA4B,EAAA,EAAA5B,CAAAI,KAAAJ,OAAA6B,EAAA,EAAA7B,CAAAgE,GAAAlC,KAAA1B,KAAMsB,KAIRuC,YAAc,SAAAjC,GACZ9B,EAAKwB,MAAMwC,kBAAkBlC,EAAEmC,OAAOC,WAAWC,MAAMC,QAJvDpE,EAAKjB,MAAQ,GAFIiB,wEASV,IAAAsD,EAAApD,KACP,OACErD,EAAAC,EAAAC,cAACsH,GAAD,KACG,CACC,OACA,YACA,UACA,QACA,aACA,SACA,SACA,SACAZ,IAAI,SAAAU,GAAK,OACTtH,EAAAC,EAAAC,cAACuH,GAAD,CACEH,MAAOA,EACPI,SAAUJ,IAAUb,EAAK9B,MAAMY,aAC/BzF,QAAS2G,EAAKS,gBAGlBlH,EAAAC,EAAAC,cAACyH,GAAD,CAAcL,MAAOjE,KAAKsB,MAAMY,uBA7Bd9C,aAqCpBtC,GAAYC,IAAOC,IAAVuH,MAYTH,GAAQrH,IAAOyH,OAAVC,KACK,SAAAnD,GAAK,OAAIA,EAAM2C,OAOf,SAAA3C,GAAK,OACjBA,EAAM+C,SAAW,gCAAkC,KAMjDC,GAAevH,YAAOqH,GAAPrH,CAAH2H,gyCCiDHC,8MAzGb9F,MAAQ,CACNqD,aAAc,QACd0C,YACE,mEACFC,QAAS,EACTC,sBAAsB,EACtBC,MAAO,CACL,CACEC,MAAO,CACLjH,IAAK,IACLM,IAAK,cAEP4G,YAAa,CAEX,qCACA,wBACA,uBAEF1G,cAAe,IAEjB,CACEyG,MAAO,CACLjH,IAAK,IACLM,IAAK,cAEP4G,YAAa,CACX,mBACA,mBACA,mBACA,oBAEF1G,cAAe,QAKrB2G,SAAW,SAAAC,GACTrF,EAAKG,SAAS,CAAEiC,aAAciD,OAMhCC,wBAA0B,eAI1BC,aAAe,SAAA/D,GACTxB,EAAKjB,MAAMgG,QAAU/E,EAAKjB,MAAMkG,MAAM,GAAGE,YAAYK,OACvDxF,EAAKG,SAAS,CACZ2E,YAAa9E,EAAKjB,MAAMkG,MAAM,GAAGE,YAAYnF,EAAKjB,MAAMgG,SACxDA,QAAS/E,EAAKjB,MAAMgG,QAAU,IAIhC/E,EAAKG,SAAS,CAAE6E,sBAAsB,wFAfxC,IAAMS,EAAepI,EAAYC,mBACjC4C,KAAKC,SAAS,CAAEsF,kDAmBhB,OACE5I,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkC,SAAA,KACEnC,EAAAC,EAAAC,cAAC2I,GAAD,KACE7I,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAC4I,GAAD,KACE9I,EAAAC,EAAAC,cAAC6I,GAAD,KAAc1F,KAAKnB,MAAM+F,aACzBjI,EAAAC,EAAAC,cAAC8I,GAAD,MACAhJ,EAAAC,EAAAC,cAAC+I,GAAD,KACEjJ,EAAAC,EAAAC,cAACgJ,GAAD,CACEpJ,QAASuD,KAAKqF,aACd3I,UACEsD,KAAKnB,MAAMiG,qBACP,eACA,cALR,QAUAnI,EAAAC,EAAAC,cAACiJ,GAAD,CACErJ,QAASuD,KAAK+F,WACdrJ,UACEsD,KAAKnB,MAAMiG,qBACP,aACA,gBAGNnI,EAAAC,EAAAC,cAACmJ,GAAD,CAAcrF,GAAG,eAAjB,YAKRhE,EAAAC,EAAAC,cAACoJ,GAAD,KACEtJ,EAAAC,EAAAC,cAACqJ,GAAD,CACEpC,kBAAmB9D,KAAKkF,SACxBhD,aAAclC,KAAKnB,MAAMqD,eAE3BvF,EAAAC,EAAAC,cAACsJ,GAAD,CACEjE,aAAclC,KAAKnB,MAAMqD,wBAlGjB9C,aA4GdsB,GAAe3D,YAAOmE,IAAPnE,CAAHqJ,MAgBZxF,GAAmB7D,IAAOC,IAAVqJ,MAIhBX,GAAc3I,YAAO6D,GAAP7D,CAAHuJ,MAKXb,GAAO1I,IAAOC,IAAVuJ,MAEJrG,GAAiBnD,YAAO6D,GAAP7D,CAAHyJ,MAMdhB,GAAiBzI,YAAO6D,GAAP7D,CAAH0J,MAGdb,GAAkB7I,IAAOC,IAAV0J,MAKfb,GAAa9I,YAAOT,EAAPS,CAAH4J,MAGVb,GAAa/I,YAAOT,EAAPS,CAAH6J,MAGVjB,GAAY5I,IAAO8J,GAAVC,ijBCjGAC,8MAzDblI,MAAQ,CACNqD,aAAc,QACd0C,YAAa,aACbC,QAAS,EACTC,sBAAsB,EACtBC,MAAO,CACL,CACEC,MAAO,CACLjH,IAAK,IACLM,IAAK,cAEP4G,YAAa,CAEX,iBACA,iBACA,kBAEF1G,cAAe,IAEjB,CACEyG,MAAO,CACLjH,IAAK,IACLM,IAAK,cAEP4G,YAAa,CACX,mBACA,mBACA,mBACA,oBAEF1G,cAAe,QAKrByI,YAAc,WACZC,OAAOC,KAAK,cAAe,SAC3BD,OAAOE,iFAIP,OACExK,EAAAC,EAAAC,cAACuK,GAAD,KACEzK,EAAAC,EAAAC,cAACwK,GAAD,KACE1K,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,2EAEFF,EAAAC,EAAAC,cAACyK,GAAD,kFAIA3K,EAAAC,EAAAC,cAAC0K,GAAD,CAAa9K,QAASuD,KAAKgH,aAA3B,iBApDgB5H,aA4DlBgI,GAAarK,IAAOC,IAAVwK,MAKVxI,GAAejC,IAAOC,IAAVyK,MAIZH,GAAavK,IAAO2B,SAAVgJ,MAUVH,GAAcxK,YAAOT,EAAPS,CAAH4K,i4BCvCFC,8MApCb/I,MAAQ,CACNqD,aAAc,WAOhBkD,wBAA0B,gGAHxB,IAAMG,EAAepI,EAAYC,mBACjC4C,KAAKC,SAAS,CAAEsF,kDAOhB,OACE5I,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkC,SAAA,KACEnC,EAAAC,EAAAC,cAACgL,GAAD,KACElL,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACiL,GAAD,KACEnL,EAAAC,EAAAC,cAACkL,GAAD,+IAKApL,EAAAC,EAAAC,cAACmL,GAAD,eAGJrL,EAAAC,EAAAC,cAACoL,GAAD,KACEtL,EAAAC,EAAAC,cAACqJ,GAAD,MACAvJ,EAAAC,EAAAC,cAACsJ,GAAD,eA7BW/G,aAuCfwB,GAAmB7D,IAAOC,IAAVkL,MAMhBzC,GAAO1I,IAAOC,IAAVmL,MAGJ3C,GAAiBzI,YAAO6D,GAAP7D,CAAHqL,MACd1C,GAAc3I,YAAO6D,GAAP7D,CAAHsL,MAKXnI,GAAiBnD,YAAO6D,GAAP7D,CAAHuL,MAUdzC,IALa9I,YAAOT,EAAPS,CAAHwL,MAKGxL,YAAOT,EAAPS,CAAHyL,4xBC/CDC,oLAxBX,OACE9L,EAAAC,EAAAC,cAAC6L,GAAD,KACE/L,EAAAC,EAAAC,cAAC8L,GAAD,KAIEhM,EAAAC,EAAAC,cAAC+L,GAAD,KACEjM,EAAAC,EAAAC,cAACgM,GAAD,CAAclI,GAAG,aAAjB,aAEFhE,EAAAC,EAAAC,cAAC+L,GAAD,KACEjM,EAAAC,EAAAC,cAACgM,GAAD,CAAclI,GAAG,UAAjB,UAEFhE,EAAAC,EAAAC,cAAC+L,GAAD,KACEjM,EAAAC,EAAAC,cAACgM,GAAD,CAAclI,GAAG,eAAjB,kBAfSvB,aA4BftC,GAAYC,IAAOC,IAAV8L,MAMTH,GAAgB5L,IAAOgM,GAAVC,MAKbH,GAAe9L,YAAOmE,IAAPnE,CAAHkM,MAmBZL,GAAW7L,IAAOgM,GAAVG,0aCjDInM,IAAOC,IAAVmM,MAaDpM,IAAOC,IAAVoM,kdCZOrM,IAAOC,IAAVqM,MAQCtM,IAAOC,IAAVsM,MAOAvM,IAAOC,IAAVuM,6SCfV,IAuBeC,GAvBH,WACV,OACE7M,EAAAC,EAAAC,cAAA,OAAKH,UAAU,OACbC,EAAAC,EAAAC,cAAC4M,EAAA,EAAD,KACE9M,EAAAC,EAAAC,cAAC6M,GAAD,KACE/M,EAAAC,EAAAC,cAAC8M,GAAD,MAEAhN,EAAAC,EAAAC,cAAC+M,GAAD,KACEjN,EAAAC,EAAAC,cAACgN,EAAA,EAAD,KACElN,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtK,IACjC/C,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOE,KAAK,YAAYD,OAAK,EAACE,UAAWtK,IACzC/C,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOE,KAAK,SAASD,OAAK,EAACE,UAAWrF,KACtChI,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOE,KAAK,cAAcD,OAAK,EAACE,UAAWjD,KAC3CpK,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOE,KAAK,UAAUD,OAAK,EAACE,UAAWpC,WAY/C9K,GAAYC,IAAOC,IAAViN,MAOTL,GAAU7M,IAAOC,IAAVkN,MClCOC,QACW,cAA7BlD,OAAOmD,SAASC,UAEe,UAA7BpD,OAAOmD,SAASC,UAEhBpD,OAAOmD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7N,EAAAC,EAAAC,cAAC4N,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtN,KAAK,SAAAuN,GACjCA,EAAaC","file":"static/js/main.119490d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/board1.9bd064ed.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = ({ children, onClick, className }) => (\n  <Container onClick={onClick} className={className}>\n    {children}\n  </Container>\n);\n\nexport default Button;\n\nconst Container = styled.div`\n  align-self: center;\n  width: 90%;\n  height: 40px;\n  background: blue;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  transition: all 300ms;\n  border-radius: 4px;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import Axios from \"axios\";\n\nconst BASE_PATH = \"/api/task\";\n\n// const Axios = Axios.create({\n//     withCredentials: true,\n// })\n\nexport default {\n  getCompletedTask,\n  save,\n  getEmpty\n};\n\nfunction getCompletedTask() {\n  var queryStr = \"\"; //useless for now\n  return Axios.get(`${BASE_PATH}?${queryStr}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n\nfunction save(task) {\n  if (task._id) {\n    //for edit. Useless for now\n    return Axios.put(`${BASE_PATH}/${task._id}`, task)\n      .then(res => res.data)\n      .catch(err => {\n        throw err;\n      });\n  } else {\n    return Axios.post(`${BASE_PATH}`, task)\n      .then(res => {\n        const savedTask = res.data; //includes the _id from DB\n        return savedTask;\n      })\n      .catch(err => {\n        throw err;\n      });\n  }\n}\n\nfunction getEmpty() {\n  const emptyTask = {\n    img: { _id: \"\", src: \"\" },\n    inputs: [],\n    verifications: []\n  };\n  return emptyTask;\n}\n\nfunction getById(taskId) {\n  if (!taskId) return Promise.reject(\"no task is\");\n  return Axios.get(`${BASE_PATH}/${taskId}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n\nfunction remove(taskId) {\n  return Axios.delete(`${BASE_PATH}/${taskId}`)\n    .then(res => res.data)\n    .catch(err => {\n      throw err;\n    });\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Input = ({ label, placeholder, className, onChange }) => {\n  return (\n    <Container className={className}>\n      <Label>{label}</Label>\n      <StyledInput placeholder={placeholder} onChange={onChange} />\n    </Container>\n  );\n};\n\nexport default Input;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.div`\n  font-size: 14px;\n  margin-top: 16px;\n  margin-bottom: 6px;\n`;\n\nconst StyledInput = styled.textarea`\n  align-self: center;\n  width: 90%;\n  height: 120px;\n  border: 3px solid #cccccc;\n  font-family: Tahoma, sans-serif;\n  box-sizing: border-box;\n  padding: 6px;\n  color: #444;\n  font-size: 18px;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"./common/Input\";\n\nclass TextField extends Component {\n  state = {};\n\n  // TODO: functions: handleInputChange, addInput, etc.\n\n  render() {\n    return (\n      <>\n        <Container>\n          <Instructions />\n          <InputContainer>\n            <StyledInput placeholder=\"Start typing here...\">\n              {/* {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((a, i) => (\n                  <textarea placeholder=\"input...\" label={i + 1} />\n              ))} */}\n            </StyledInput>\n          </InputContainer>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TextField;\n\nconst Container = styled.div``;\nconst Instructions = styled.div``;\n\nconst StyledInput = styled.textarea`\n  width: 95%;\n  height: 88%;\n  margin: 4px;\n  background-color: #f5f5f5;\n  background-image: -webkit-linear-gradient(left, white 10px, transparent 10px),\n    -webkit-linear-gradient(right, white 10px, transparent 10px),\n    -webkit-linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-image: -moz-linear-gradient(left, white 10px, transparent 10px),\n    -moz-linear-gradient(right, white 10px, transparent 10px),\n    -moz-linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-image: -ms-linear-gradient(left, white 10px, transparent 10px),\n    -ms-linear-gradient(right, white 10px, transparent 10px),\n    -ms-linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-image: -o-linear-gradient(left, white 10px, transparent 10px),\n    -o-linear-gradient(right, white 10px, transparent 10px),\n    -o-linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-image: linear-gradient(left, white 10px, transparent 10px),\n    linear-gradient(right, white 10px, transparent 10px),\n    linear-gradient(white 30px, #ccc 30px, #ccc 31px, white 31px);\n  background-size: 100% 100%, 100% 100%, 100% 31px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);\n  line-height: 31px;\n  font-size: 18px;\n  color: #666;\n  padding: 8px;\n  &:focus {\n    outline: none;\n  }\n`;\nconst InputContainer = styled.div`\n  height: 80vh;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../common/Button\";\nimport taskService from \"../../services/taskService\";\nimport { Link } from \"react-router-dom\";\nimport board1 from \"../../data/board1.png\";\n\n// Components\nimport TextField from \"../TextField\";\n\nclass Describe extends Component {\n  componentDidMount() {\n    const task = taskService.getEmpty();\n    this.setState({ task }); //inputs\n  }\n  handleTaskDescription = () => {\n    // get values from 'inputs'\n    // put the values in state, inside the empty 'inputs' array\n    taskService.save({ ...this.state });\n  };\n  handleSend = () => {\n    // Store user text and other required info\n    this.handleTaskDescription();\n    // Move to the \"Align\" task page\n    // document.location.href = \"https://strayblues.github.io/hexagon-app/align\"; // Causes bug on deployment\n  };\n  render() {\n    return (\n      <>\n        <BoardContainer>\n          <h2>Write instructions for painting the tiles</h2>\n          <TaskImage src={board1} alt={\"task\"} />\n        </BoardContainer>\n        <TextFieldContainer>\n          <InputContainer>\n            <TextField />\n          </InputContainer>\n          <StyledButton onClick={this.handleSend}>\n            <RedirectLink to=\"/align\">Send</RedirectLink>\n          </StyledButton>\n        </TextFieldContainer>\n      </>\n    );\n  }\n}\n\nexport default Describe;\n\nconst ElementContainer = styled.div`\n  margin: 1em 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 75vh;\n  overflow: scroll;\n`;\nconst InputContainer = styled(ElementContainer)`\n  max-height: 75vh;\n  border-radius: 4px;\n  transition: all 300ms;\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  }\n`;\nconst BoardContainer = styled(ElementContainer)``;\nconst TaskImage = styled.img``;\nconst StyledButton = styled(Button)`\n  width: 25%;\n  align-self: left;\n`;\nconst RedirectLink = styled(Link)`\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  padding: 20px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: inherit;\n  transition: all 300ms;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\nconst TextFieldContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { Component } from \"react\";\n\nclass Hexagon extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hexagonStyle: {\n        fill: \"white\",\n        stroke: \"black\",\n        strokeWidth: \"2\"\n        // shapeRendering: \"geometricPrecision\"\n      },\n      isSelected: false,\n      isMouseOver: false\n    };\n    this.toggleMark = this.toggleMark.bind(this);\n  }\n\n  toggleMark = e => {\n    // deselected -> mark and uncolor it\n    if (this.state.isMouseOver && this.state.isSelected) {\n      this.setState({\n        hexagonStyle: {\n          ...this.state.hexagonStyle,\n          strokeWidth: \"5\",\n          fill: this.props.currentColor\n        },\n        isSelected: false\n      });\n      // selected - > color and mark\n    } else if (this.state.isMouseOver && !this.state.isSelected) {\n      this.setState({\n        hexagonStyle: {\n          ...this.state.hexagonStyle,\n          strokeWidth: \"5\",\n          fill: this.props.currentColor\n        },\n        isSelected: true\n      });\n      // selected but not hovered -> keep marked (but decolor?)\n    } else if (!this.state.isMouseOver && this.state.isSelected) {\n      this.setState({\n        hexagonStyle: {\n          ...this.state.hexagonStyle,\n          strokeWidth: \"5\"\n        },\n        isSelected: false\n      });\n      // not hovered and not selected\n    } else if (!this.state.isMouseOver && !this.state.isSelected) {\n      this.setState({\n        hexagonStyle: { ...this.state.hexagonStyle, strokeWidth: \"2\" },\n        isSelected: true\n      });\n    }\n  };\n\n  trackMouseOver = e => {\n    this.setState({ isMouseOver: true });\n  };\n\n  trackMouseLeave = e => {\n    this.setState({ isMouseOver: false });\n  };\n\n  render() {\n    return (\n      <g\n        transform={this.props.transform}\n        onMouseEnter={this.trackMouseOver}\n        onMouseLeave={this.trackMouseLeave}\n        onClick={this.toggleMark}\n      >\n        <polygon\n          id=\"hexagon\"\n          points=\"50,25 100,25 125,68 100,111 50,111 25,68\"\n          style={this.state.hexagonStyle}\n        />\n        <text text-anchor=\"middle\" x=\"74\" y=\"85\" fill=\"black\" font-size=\"40\">\n          {this.props.number}\n        </text>\n      </g>\n    );\n  }\n}\n\nexport default Hexagon;\n\n// const Number = styled.p`\n//   font-size: 8px;\n// `;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Hexagon from \"./common/Hexagon\";\n\nclass EmptyBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Container>\n        <svg viewBox=\"0 0 1350 950\">\n          {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(i => {\n            return [0, 2, 4, 6, 8, 10, 12, 14].map(j => {\n              return (\n                <>\n                  <Hexagon\n                    number={10 * j + i + 1}\n                    currentColor={this.props.currentColor}\n                    transform={\"translate(\" + j * 75 + \",\" + i * 86 + \")\"}\n                  />\n                  <Hexagon\n                    number={10 * j + i + 11}\n                    currentColor={this.props.currentColor}\n                    transform={\n                      \"translate(\" + (j + 1) * 75 + \",\" + (i * 86 + 43) + \")\"\n                    }\n                  />\n                </>\n              );\n            });\n          })}\n        </svg>\n      </Container>\n    );\n  }\n}\n\nexport default EmptyBoard;\n\nconst Container = styled.div`\n  margin-left: 2em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleClick = e => {\n    this.props.passColorToParent(e.target.attributes.color.value);\n  };\n\n  render() {\n    return (\n      <Container>\n        {[\n          \"gold\",\n          \"limegreen\",\n          \"crimson\",\n          \"black\",\n          \"dodgerblue\",\n          \"violet\",\n          \"orange\",\n          \"white\"\n        ].map(color => (\n          <Color\n            color={color}\n            selected={color === this.props.currentColor}\n            onClick={this.handleClick}\n          />\n        ))}\n        <CurrentColor color={this.props.currentColor} />\n      </Container>\n    );\n  }\n}\n\nexport default ColorPicker;\n\nconst Container = styled.div`\n  align-self: center;\n  height: 60px;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: uppercase;\n  transition: all 300ms;\n  border-radius: 4px;\n  cursor: pointer;\n`;\nconst Color = styled.button`\n  background: ${props => props.color};\n  width: 3em;\n  height: 3em;\n  margin: 0 0.5em;\n  border-radius: 50%;\n  border: 1px solid black;\n  outline: none;\n  box-shadow: ${props =>\n    props.selected ? \"0 5px 10px rgba(0, 0, 0, 0.8)\" : \"\"};\n  transition: all 300ms;\n  &:hover {\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.8);\n  }\n`;\nconst CurrentColor = styled(Color)`\n  width: 1.5em;\n  height: 1.5em;\n  margin-left: 2em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport taskService from \"../../services/taskService\";\nimport { Link } from \"react-router-dom\";\n\n// Components\nimport NumberedBoard from \"../NumberedBoard\";\nimport ColorPicker from \"../common/ColorPicker\";\nimport Button from \"../common/Button\";\n\nclass Align extends Component {\n  state = {\n    currentColor: \"white\",\n    currentStep:\n      \"Starting with the leftmost column paint every other column blue.\",\n    taskIdx: 0,\n    taskDisplayCompleted: false,\n    tasks: [\n      {\n        image: {\n          _id: \"1\",\n          src: \"board1.png\"\n        },\n        description: [\n          // \"Line 1 of task 1\",\n          \"Paint the remaining columns green.\",\n          \"Actually that's it...\",\n          \"Nothing else to do.\"\n        ],\n        verifications: []\n      },\n      {\n        image: {\n          _id: \"2\",\n          src: \"board2.png\"\n        },\n        description: [\n          \"Line 1 of task 2\",\n          \"Line 2 of task 2\",\n          \"Line 3 of task 2\",\n          \"Line 4 of task 2\"\n        ],\n        verifications: []\n      }\n    ]\n  };\n\n  setColor = newColor => {\n    this.setState({ currentColor: newColor });\n  };\n  componentDidMount() {\n    const taskToVerify = taskService.getCompletedTask();\n    this.setState({ taskToVerify }); // \"verify\" page\n  }\n  handleSubmitVerificaion = () => {\n    // completedTaskWithVerification.verification.push(new verification)\n    // taskService.save({ completedTaskWithVerification });\n  };\n  showNextLine = props => {\n    if (this.state.taskIdx < this.state.tasks[0].description.length) {\n      this.setState({\n        currentStep: this.state.tasks[0].description[this.state.taskIdx],\n        taskIdx: this.state.taskIdx + 1\n      });\n      // alert(\"current step is: \" + this.state.currentStep);\n    } else {\n      this.setState({ taskDisplayCompleted: true });\n      return;\n    }\n  };\n  render() {\n    return (\n      <>\n        <StepsContainer>\n          <h1>Align The Tiles</h1>\n          <Step>\n            <StepElement>{this.state.currentStep}</StepElement>\n            <Separator></Separator>\n            <ButtonContainer>\n              <NextButton\n                onClick={this.showNextLine}\n                className={\n                  this.state.taskDisplayCompleted\n                    ? \"inactive-btn\"\n                    : \"active-btn\"\n                }\n              >\n                Next\n              </NextButton>\n              <DoneButton\n                onClick={this.handleDone}\n                className={\n                  this.state.taskDisplayCompleted\n                    ? \"active-btn\"\n                    : \"inactive-btn\"\n                }\n              >\n                <RedirectLink to=\"/align-done\">Send</RedirectLink>\n              </DoneButton>\n            </ButtonContainer>\n          </Step>\n        </StepsContainer>\n        <BoardContainer>\n          <ColorPicker\n            passColorToParent={this.setColor}\n            currentColor={this.state.currentColor}\n          />\n          <NumberedBoard\n            currentColor={this.state.currentColor} // Pass color to Board\n          />\n        </BoardContainer>\n      </>\n    );\n  }\n}\n\nexport default Align;\n\nconst RedirectLink = styled(Link)`\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  padding: 20px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: inherit;\n  transition: all 300ms;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n`;\nconst ElementContainer = styled.div`\n  margin: 2em;\n  background-color: white;\n`;\nconst StepElement = styled(ElementContainer)`\n  background-color: lightblue;\n  padding: 0.5em;\n  border-radius: 4px;\n`;\nconst Step = styled.div``;\n\nconst BoardContainer = styled(ElementContainer)`\n  width: 50vw;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n`;\nconst StepsContainer = styled(ElementContainer)`\n  width: 32vw;\n`;\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst NextButton = styled(Button)`\n  width: 20%;\n`;\nconst DoneButton = styled(Button)`\n  width: 20%;\n`;\nconst Separator = styled.hr`\n  margin: 0 1em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\n// Components\nimport Button from \"../common/Button\";\n\n// window.onbeforeunload = function() {\n//   return \"Are you sure that you want to leave this page?\";\n// };\n\nclass AlignDone extends Component {\n  state = {\n    currentColor: \"white\",\n    currentStep: \"Do a thing\",\n    taskIdx: 0,\n    taskDisplayCompleted: false,\n    tasks: [\n      {\n        image: {\n          _id: \"1\",\n          src: \"board1.jpg\"\n        },\n        description: [\n          // \"Line 1 of task 1\",\n          \"Do a 2nd thing\",\n          \"Do a 3rd thing\",\n          \"Do a 4th thing\"\n        ],\n        verifications: []\n      },\n      {\n        image: {\n          _id: \"2\",\n          src: \"board1.jpg\"\n        },\n        description: [\n          \"Line 1 of task 2\",\n          \"Line 2 of task 2\",\n          \"Line 3 of task 2\",\n          \"Line 4 of task 2\"\n        ],\n        verifications: []\n      }\n    ]\n  };\n\n  handleClose = () => {\n    window.open(\"about:blank\", \"_self\");\n    window.close();\n  };\n\n  render() {\n    return (\n      <Containter>\n        <Instructions>\n          <h2>Good job! You're almost done.</h2>\n          <h2>Please copy your results and paste them in the MTurk screen.</h2>\n        </Instructions>\n        <DataToCopy>\n          text in json format that the user can copy&paste (and cut?), but not\n          edit\n        </DataToCopy>\n        <CloseButton onClick={this.handleClose}>Close</CloseButton>\n      </Containter>\n    );\n  }\n}\n\nexport default AlignDone;\n\nconst Containter = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Instructions = styled.div`\n  color: #444;\n`;\n\nconst DataToCopy = styled.textarea`\n  width: 60vw;\n  height: 40vh;\n  align-self: center;\n  margin-bottom: 2rem;\n  color: darkblue;\n  font-size: 16px;\n  padding: 8px;\n`;\n\nconst CloseButton = styled(Button)`\n  color: white;\n  width: 20%;\n  background-color: orange;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport taskService from \"../../services/taskService\";\n\n// Mock data\nimport { jsonResponse } from \"../../data/tasks.js\";\n\n// Components\n// import ElementContainer from \"../common/ElementContainer\";\nimport NumberedBoard from \"../NumberedBoard\";\nimport ColorPicker from \"../common/ColorPicker\";\nimport Button from \"../common/Button\";\n\nclass Verify extends Component {\n  state = {\n    currentColor: \"white\"\n  };\n\n  componentDidMount() {\n    const taskToVerify = taskService.getCompletedTask();\n    this.setState({ taskToVerify }); // \"verify\" page\n  }\n  handleSubmitVerificaion = () => {\n    // completedTaskWithVerification.verification.push(new verification)\n    // taskService.save({ completedTaskWithVerification });\n  };\n  render() {\n    return (\n      <>\n        <StepsContainer>\n          <h1>Verification Task</h1>\n          <Step>\n            <StepElement>\n              Show next line when user clicks next. In the end the \"Next\" button\n              is replaced with \"Done\". Location of Next/Done buttons may\n              change.\"\n            </StepElement>\n            <NextButton>Next</NextButton>\n          </Step>\n        </StepsContainer>\n        <BoardContainer>\n          <ColorPicker />\n          <NumberedBoard />\n          {/* <DoneButton>Done</DoneButton> */}\n        </BoardContainer>\n      </>\n    );\n  }\n}\n\nexport default Verify;\n\nconst ElementContainer = styled.div`\n  margin: 2em;\n  background-color: white;\n  width: 45vw;\n  max-height: 75vh;\n`;\nconst Step = styled.div`\n  display: flex;\n`;\nconst StepsContainer = styled(ElementContainer)``;\nconst StepElement = styled(ElementContainer)`\n  background-color: lightblue;\n  padding: 0.5em;\n  border-radius: 4px;\n`;\nconst BoardContainer = styled(ElementContainer)`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n`;\nconst DoneButton = styled(Button)`\n  width: 25%;\n  align-self: flex-end;\n  background-color: lightseagreen;\n`;\nconst NextButton = styled(Button)`\n  background-color: blue;\n  width: 30%;\n  margin-right: 3em;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <Container>\n        <MenuContainer>\n          {/* <MenuItem>\n            <MenuItemLink to=\"/instructions\">Instructions</MenuItemLink>\n          </MenuItem> */}\n          <MenuItem>\n            <MenuItemLink to=\"/describe\">Describe</MenuItemLink>\n          </MenuItem>\n          <MenuItem>\n            <MenuItemLink to=\"/align\">Align</MenuItemLink>\n          </MenuItem>\n          <MenuItem>\n            <MenuItemLink to=\"/align-done\">Done</MenuItemLink>\n          </MenuItem>\n          {/* <MenuItem>\n            <MenuItemLink to=\"/verify\">Verify</MenuItemLink>\n          </MenuItem> */}\n        </MenuContainer>\n      </Container>\n    );\n  }\n}\n\nexport default Navbar;\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n`;\nconst MenuContainer = styled.li`\n  display: flex;\n  color: #222;\n  list-style: none;\n`;\nconst MenuItemLink = styled(Link)`\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0);\n  padding: 20px 10px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: inherit;\n  transition: all 300ms;\n\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n  &:hover {\n    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);\n  }\n`;\nconst MenuItem = styled.li`\n  padding: 1em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Header = () => {\n  return (\n    <Container>\n      <Title>Hexagon App</Title>\n    </Container>\n  );\n};\n\nexport default Header;\n\nconst Container = styled.div`\n  width: 100%;\n  min-height: 100px;\n  border-bottom: 1px solid #000;\n  background: #fafafa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 24px;\n`;\n\nconst Title = styled.div`\n  font-size: 36px;\n  color: #444;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Footer = () => {\n  return (\n    <Container>\n      <Divider />\n      <Info>© ONLP Lab 2019</Info>\n    </Container>\n  );\n};\n\nexport default Footer;\n\nconst Container = styled.div`\n  width: 500px;\n  margin: 1em auto;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Divider = styled.div`\n  width: 500px;\n  height: 1px;\n  background: #444;\n  margin: 20px 0;\n`;\n\nconst Info = styled.div`\n  color: #444;\n  font-size: 18px;\n  align-self: flex-end;\n`;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\n// components\nimport Describe from \"./components/pages/Describe\";\nimport Align from \"./components/pages/Align\";\nimport AlignDone from \"./components/pages/AlignDone\";\nimport Verify from \"./components/pages/Verify\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Container>\n          <Navbar />\n          {/* <Header /> */}\n          <Content>\n            <Switch>\n              <Route exact path=\"/\" component={Describe} />\n              <Route path=\"/describe\" exact component={Describe} />\n              <Route path=\"/align\" exact component={Align} />\n              <Route path=\"/align-done\" exact component={AlignDone} />\n              <Route path=\"/verify\" exact component={Verify} />\n            </Switch>\n          </Content>\n          {/* <Footer /> */}\n        </Container>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n\nconst Container = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  background: #e0e0e0;\n  display: flex;\n  flex-direction: column;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-self: center;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}